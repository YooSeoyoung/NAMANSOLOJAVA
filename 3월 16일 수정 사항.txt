@Table(name = "user_profile")
public class UserProfile {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "user_name")
    private User user; // 하나의 유저가 많은 userProfile을 가질 수 있음
    
    @ManyToMany
    @JoinTable(
        name = "user_profile_tag",
        joinColumns = @JoinColumn(name = "user_profile_id"),
        inverseJoinColumns = @JoinColumn(name = "tag_id")
    )
    private List<Tag> preferredTags = new ArrayList<>();  // 유저가 선호하는 태그 목록
    //하나의 유저가 여러 태그를 선호할 수 있고, 동시에 하나의 태그가 여러 유저에게 선호될 수 있음
}

----------------------------------------------------------------------------------------------------
public class Tag {
    @Id
    private String name;  // 태그 이름 (예: '복싱화', '샌드백', '루틴', '식단' 등 관리자가  고정)


    @OneToMany(mappedBy = "tag")  // 하나의 태그는 여러 게시글을 가질 수 있음
    private List<Board> boards = new ArrayList<>();  // 해당 태그가 포함된 게시글 목록


}
--> 어차피 아이디가 곧 태그명으로 사용해도 무방하다고 판단해서 제외
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

---------------------------------------------------------------------------------------------

    @ManyToOne
    @JoinColumn(name = "tag_id")  // 각 게시글은 하나의 태그를 가짐
    private Tag tag;  // 게시글에 연결된 태그

--> BOARD 클래스에 추가 

